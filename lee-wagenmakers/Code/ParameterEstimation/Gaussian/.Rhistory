getwd()
theme_black()
theme_black()
help()
help(Startup)
print("we have a winner")
ggplot(df_norm,aes(x=max,fill=condition))+
geom_histogram(binwidth=0.02,aes(y=..count../sum(..count..)))+
facet_wrap(~condition)+
theme_black()+
xlab("\nMaximum (normalized) slider value")+
ylab("Proportion of responses\n")+
#ggtitle('distribution of max slide val for normalized values')+
#  theme(strip.text= element_text(size=30),
#   plot.title= element_text(size=),
#       axis.title=element_text(size=32),
#       axis.text=element_text(size=25))+
guides(fill=FALSE)#guide_legend(title=NULL))+
theme_display()
library(r2winbugs)
install.package("r2winbugs")
install.packages("R2WinBUGS")
library(r2winbugs)
library(R2WinBUGS)
source('~/Documents/papers/bayesian-statistics/Bayesian Cognitive Modeling -- Lee, Wagenmakers/i2-winbugs-ex.r')
install.packages("rjags")
install.packages("R2jags")
library(rjags)
install.packages("rjags")
install.packages("R2jags")
library(rjags)
library(R2jags)
library(rjags)
library(rjags)
install.packages("~/Downloads/rjags_3-2.tar", repos = NULL)
install.packages("~/Downloads/rjags_3-1.tar", repos = NULL)
remove.packages(rjags)
remove.packages('rjags')
remove.packages('R2jags')
library(rjags)
install.package('rjags')
install.packages('rjags')
library(rjags)
remove.packages('rjags')
R.home()
library(rjags)
library(rjags)
library(rjags)
install.packages('rjags')
library(rjags)
rm(list=ls())
graphics.off()
if ( .Platform$OS.type != "windows" ) {    windows <- function( ... ) X11( ... )}
if ( .Platform$OS.type != "windows" ) {
windows <- function( ... ) X11( ... )
}
require(rjags)
install.packages(ggplot2)
install.packages('ggplot2')
install.packacge('gridExtra')
install.packages('gridExtra')
library(R2jags)
library(gridExtra)
library(reshape2)
setwd("/Users/mht/Documents/learning/tfbt/Lee&Wagenmakers/Code/ParameterEstimation/Gaussian")
# clears workspace:
rm(list=ls())
x <- c(1.1, 1.9, 2.3, 1.8)
n <- length(x)
data <- list("x", "n") # to be passed on to JAGS
myinits <- list(
list(mu = 0, sigma = 1))
# parameters to be monitored:
parameters <- c("mu", "sigma")
cat('# Inferring the Mean and Standard Deviation of a Gaussian
model{
# Data Come From A Gaussian
for (i in 1:n){
x[i] ~ dnorm(mu,lambda)
}
# Priors
mu ~ dnorm(0,.001)
sigma ~ dunif(0,10)
lambda <- 1/pow(sigma,2)
}',file={gaussn <- tempfile()})
# The following command calls JAGS with specific options.
# For a detailed description see the R2jags documentation.
samples <- jags(data, inits=myinits, parameters,
model.file=gaussn, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
# Now the values for the monitored parameters are in the "samples" object,
# ready for inspection.
df<-data.frame(mu = samples$BUGSoutput$sims.list$mu,
sigma = samples$BUGSoutput$sims.list$sigma)
blankPanel<-grid.rect(gp=gpar(col="white"))
a<-qplot(data=df,x=mu,y=sigma,geom='point')+theme_bw()+xlim(0,3)+ylim(0,3)
b<-qplot(mu, data=df, geom='histogram',binwidth=0.1)+theme_bw()+xlim(0,3)
c<-qplot(sigma, data=df, geom='histogram',binwidth=0.1)+theme_bw()+
coord_flip()+scale_y_reverse()+xlim(0,3)
#quartz("data")
grid.arrange(a,c,b,blankPanel,ncol=2)
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, lambda = rep(1,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma,2)
}
}',file={ sevensci.uniform <-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file= sevensci.uniform, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df_sigmas<-data.frame(samples$BUGSoutput$sims.list$sigma)
df_mean<-data.frame(mu = samples$BUGSoutput$sims.list$mu)
a<-ggplot(melt(df_sigmas),aes(x=value))+
facet_wrap(~variable,scales='free')+
geom_histogram(binwidth=1)+
theme_bw()+
xlab('sigma')+
xlim(0, 50)
b<-qplot(data=df_mean,mu,geom='histogram',binwidth=0.2)+theme_bw()
#quartz("seven scientists, uniform prior over sigma")
grid.arrange(a,b,ncol=2)
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, lambda = rep(1,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma,2)
}
}',file={ sevens.uniform <-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file= sevens.uniform, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
parameters
myinits
data
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, lambda = rep(1,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma,2)
}
}',file={ sevens.uniform <-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file= seven.scientists, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df_sigmas<-data.frame(samples$BUGSoutput$sims.list$sigma)
df_mean<-data.frame(mu = samples$BUGSoutput$sims.list$mu)
a<-ggplot(melt(df_sigmas),aes(x=value))+
facet_wrap(~variable,scales='free')+
geom_histogram(binwidth=1)+
theme_bw()+
xlab('sigma')+
xlim(0, 50)
b<-qplot(data=df_mean,mu,geom='histogram',binwidth=0.2)+theme_bw()
#quartz("seven scientists, uniform prior over sigma")
grid.arrange(a,b,ncol=2)
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
lambda[i] ~ dgamma(.001,.001)
sigma[i] <- 1/sqrt(lambda[i])
}
}',file={seven.scientists<-tempfile()})
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, lambda = rep(1,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma,2)
}
}',file={ sevens.uniform <-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file= seven.scientists, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df_sigmas<-data.frame(samples$BUGSoutput$sims.list$sigma)
df_mean<-data.frame(mu = samples$BUGSoutput$sims.list$mu)
a<-ggplot(melt(df_sigmas),aes(x=value))+
facet_wrap(~variable,scales='free')+
geom_histogram(binwidth=1)+
theme_bw()+
xlab('sigma')+
xlim(0, 50)
b<-qplot(data=df_mean,mu,geom='histogram',binwidth=0.2)+theme_bw()
#quartz("seven scientists, uniform prior over sigma")
grid.arrange(a,b,ncol=2)
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, lambda = rep(1,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma,2)
}
}',file={seven.unif<-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file= seven.unif, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df_sigmas<-data.frame(samples$BUGSoutput$sims.list$sigma)
df_mean<-data.frame(mu = samples$BUGSoutput$sims.list$mu)
a<-ggplot(melt(df_sigmas),aes(x=value))+
facet_wrap(~variable,scales='free')+
geom_histogram(binwidth=1)+
theme_bw()+
xlab('sigma')+
xlim(0, 50)
b<-qplot(data=df_mean,mu,geom='histogram',binwidth=0.2)+theme_bw()
#quartz("seven scientists, uniform prior over sigma")
grid.arrange(a,b,ncol=2)
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, lambda = rep(1,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma,2)
}
}',file={seven.unif<-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file= seven.unif, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df_sigmas<-data.frame(samples$BUGSoutput$sims.list$sigma)
df_mean<-data.frame(mu = samples$BUGSoutput$sims.list$mu)
a<-ggplot(melt(df_sigmas),aes(x=value))+
facet_wrap(~variable,scales='free')+
geom_histogram(binwidth=1)+
theme_bw()+
xlab('sigma')+
xlim(0, 50)
b<-qplot(data=df_mean,mu,geom='histogram',binwidth=0.2)+theme_bw()
#quartz("seven scientists, uniform prior over sigma")
grid.arrange(a,b,ncol=2)
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, lambda = rep(1,n)))
parameters <- c("mu", "sigma")
samples <- jags(data, inits=myinits, parameters,
model.file='SevenScientists_unifvar.txt', n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
myinits <- list(
list(mu = 0, sigma = rep(1,n)))
samples <- jags(data, inits=myinits, parameters,
model.file='SevenScientists_unifvar.txt', n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
setwd("/Users/mht/Documents/learning/tfbt/Lee&Wagenmakers/Code/ParameterEstimation/Gaussian")
samples <- jags(data, inits=myinits, parameters,
model.file='SevenScientists_unifvar.txt', n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, lambda = rep(1,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma[i],2)
}
}',file={seven.unif<-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file=seven.unif, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df_sigmas<-data.frame(samples$BUGSoutput$sims.list$sigma)
df_mean<-data.frame(mu = samples$BUGSoutput$sims.list$mu)
a<-ggplot(melt(df_sigmas),aes(x=value))+
facet_wrap(~variable,scales='free')+
geom_histogram(binwidth=1)+
theme_bw()+
xlab('sigma')+
xlim(0, 50)
b<-qplot(data=df_mean,mu,geom='histogram',binwidth=0.2)+theme_bw()
#quartz("seven scientists, uniform prior over sigma")
grid.arrange(a,b,ncol=2)
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, sigma = rep(5,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma[i],2)
}
}',file={seven.unif<-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file=seven.unif, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df_sigmas<-data.frame(samples$BUGSoutput$sims.list$sigma)
df_mean<-data.frame(mu = samples$BUGSoutput$sims.list$mu)
a<-ggplot(melt(df_sigmas),aes(x=value))+
facet_wrap(~variable,scales='free')+
geom_histogram(binwidth=1)+
theme_bw()+
xlab('sigma')+
xlim(0, 50)
b<-qplot(data=df_mean,mu,geom='histogram',binwidth=0.2)+theme_bw()
#quartz("seven scientists, uniform prior over sigma")
grid.arrange(a,b,ncol=2)
x <- c(-27.020,3.570,8.191,9.898,9.603,9.945,10.056)
n <- length(x)
data <- list("x", "n")
myinits <- list(
list(mu = 0, sigma = rep(1,n)))
parameters <- c("mu", "sigma")
cat('# The Seven Scientists
model{
# Data Come From Gaussians With Common Mean But Different Precisions
for (i in 1:n){
x[i] ~ dnorm(mu,lambda[i])
}
# Priors
mu ~ dnorm(0,.001)
for (i in 1:n){
sigma[i] ~ dunif(0,10)
lambda[i] <- 1/pow(sigma[i],2)
}
}',file={seven.unif<-tempfile()})
samples <- jags(data, inits=myinits, parameters,
model.file=seven.unif, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df_sigmas<-data.frame(samples$BUGSoutput$sims.list$sigma)
df_mean<-data.frame(mu = samples$BUGSoutput$sims.list$mu)
a<-ggplot(melt(df_sigmas),aes(x=value))+
facet_wrap(~variable,scales='free')+
geom_histogram(binwidth=1)+
theme_bw()+
xlab('sigma')+
xlim(0, 50)
b<-qplot(data=df_mean,mu,geom='histogram',binwidth=0.2)+theme_bw()
#quartz("seven scientists, uniform prior over sigma")
grid.arrange(a,b,ncol=2)
