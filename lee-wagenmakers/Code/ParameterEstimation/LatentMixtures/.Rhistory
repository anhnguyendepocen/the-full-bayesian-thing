xlim(0,1)+
xlab('mu malingerers')
a<-qplot(data=melt(df$mumal),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu malingerers, unknown phi')
b<-qplot(data=melt(df2$mumal),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu malingerers, phi = 0.9')
grid.arrange(a,b)
a<-qplot(data=melt(df$mumal),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu malingerers, unknown phi')
b<-qplot(data=melt(df2$mumal),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu malingerers, phi = 0.9')
c<-qplot(data=melt(df$mubon),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu bonafide, unknown phi')
d<-qplot(data=melt(df2$mubon),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu bonafide, phi = 0.9')
grid.arrange(a,b,c,d,nrow=2)
cat('# Malingering, with Individual Differences
model{
# Each Person Belongs to One of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(phi) # phi is the Base Rate
z1[i] <- z[i]+1
}
# Base Rate set to 0.1
phi <- 0.1
# Data are Binomial with Rate Given by
# Each Personís Group Assignment
for (i in 1:p){
k[i] ~ dbin(theta[i,z1[i]],n)
theta[i,1] ~ dbeta(alpha[1],beta[1])
theta[i,2] ~ dbeta(alpha[2],beta[2])
}
# Transformation to Group Mean and Precision
alpha[1] <- mubon * lambdabon
beta[1] <- lambdabon * (1-mubon)
# Additivity on Logit Scale
logit(mumal) <- logit(mubon) - mudiff
alpha[2] <- mumal * lambdamal
beta[2]  <- lambdamal * (1-mumal)
# Priors
mubon ~ dbeta(1,1) # uniform over coin weights
mudiff ~ dnorm(0,0.5)T(0,) # Constrained to be Positive
lambdabon ~ dunif(40,800) # higher precision for bonafide?
lambdamal ~ dunif(4,100) # lower precision for malingerer?
}
',file={f<-tempfile()})
k <- c(45,45,44,45,44,45,45,45,45,45,30,20,6,44,44,27,25,17,14,27,35,30)
p <- length(k) # number of people
n <- 45        # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <- list(
list(z = round(runif(p)), mudiff=0.2),
list(z = round(runif(p)), mudiff=0.3),
list(z = round(runif(p)), mudiff=0.4))
# parameters to be monitored:
parameters <- c("theta","z","mubon","lambdabon",
"mumal","lambdamal","mudiff")
# The following command calls JAGS with specific options.
# For a detailed description see the R2jags documentation.
samples <- jags(data, inits=myinits, parameters,
model.file = f, n.chains=3, n.iter=10000,
n.burnin=1000, n.thin=1, DIC=T)
df2<-data.frame(theta = samples$BUGSoutput$sims.list$theta,
z = samples$BUGSoutput$sims.list$z,
mubon = samples$BUGSoutput$sims.list$mubon,
lambdabon = samples$BUGSoutput$sims.list$lambdabon,
mumal = samples$BUGSoutput$sims.list$mumal,
lambdamal = samples$BUGSoutput$sims.list$lambdamal,
mudiff = samples$BUGSoutput$sims.list$mudiff)
a<-qplot(data=melt(df$mumal),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu malingerers, unknown phi')
b<-qplot(data=melt(df2$mumal),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu malingerers, phi = 0.1')
c<-qplot(data=melt(df$mubon),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu bonafide, unknown phi')
d<-qplot(data=melt(df2$mubon),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)+
xlab('mu bonafide, phi = 0.1')
grid.arrange(a,b,c,d,nrow=2)
cheat.dat  <- read.table("cheat.csv",header=F,sep=",")
cheatt.dat <- read.table("cheatt.csv",header=F,sep="")
truth <- cheatt.dat$V1 #truth = 1 if cheater
k <- apply(cheat.dat,1,sum) # total correct per participant
p <- length(k) # number of people
n <- 40        # total trials
data <- list("p", "k", "n", "truth") # to be passed on to JAGS
myinits <- list(
list(z = round(runif(p)), mudiff=0.1, phi=0.5, mubon=0.5, lambdabon=30, lambdache=25),
list(z = round(runif(p)), mudiff=0.15, phi=0.5, mubon=0.5, lambdabon=25, lambdache=30)
)
# parameters to be monitored:
parameters <- c("theta","z","mubon","lambdabon",
"muche","lambdache","mudiff","phi","alpha","beta","pc")
set.seed(3) # some chains result in "undefined real result -- see box & exercise"
samples = jags(data, inits=myinits, parameters,
model.file =f, n.chains=2, n.iter=6000,
n.burnin=3000, n.thin=1, DIC=T)
cat('# Cheating Latent Mixture Model
model{
# Each Person Belongs to One of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(phi) # phi is the Base Rate
z1[i] <- z[i]+1
}
# Relatively Uninformative Prior on Base Rate
phi ~ dbeta(5,5)
# Data are Binomial with Rate Given by
# Each Personís Group Assignment
for (i in 1:p){
k[i] ~ dbin(theta[i,z1[i]],n)
thetatmp[i,1] ~ dbeta(alpha[1],beta[1])
theta[i,1] <- max(.01,min(.99,thetatmp[i,1]))
thetatmp[i,2] ~ dbeta(alpha[2],beta[2])
theta[i,2] <- max(.01,min(.99,thetatmp[i,2]))
}
# Transformation to Group Mean and Precision
alpha[1] <- mubon * lambdabon
beta[1] <- lambdabon * (1-mubon)
# Additivity on Logit Scale
logit(muche) <- logit(mubon) + mudiff # Note the "+"
alpha[2] <- muche * lambdache
beta[2] <- lambdache * (1-muche)
# Priors
mubon ~ dbeta(1,1)
mudiff ~ dnorm(0,0.5)T(0,) # Constrained to be Positive
lambdabon ~ dunif(5,50)
lambdache ~ dunif(5,50)
# Correct Count
for (i in 1:p){
pct[i] <- equals(z[i],truth[i])
}
pc <- sum(pct[1:p])
}',file={f<-tempfile()})
cheat.dat  <- read.table("cheat.csv",header=F,sep=",")
cheatt.dat <- read.table("cheatt.csv",header=F,sep="")
truth <- cheatt.dat$V1 #truth = 1 if cheater
k <- apply(cheat.dat,1,sum) # total correct per participant
p <- length(k) # number of people
n <- 40        # total trials
data <- list("p", "k", "n", "truth") # to be passed on to JAGS
myinits <- list(
list(z = round(runif(p)), mudiff=0.1, phi=0.5, mubon=0.5, lambdabon=30, lambdache=25),
list(z = round(runif(p)), mudiff=0.15, phi=0.5, mubon=0.5, lambdabon=25, lambdache=30)
)
# parameters to be monitored:
parameters <- c("theta","z","mubon","lambdabon",
"muche","lambdache","mudiff","phi","alpha","beta","pc")
set.seed(3) # some chains result in "undefined real result -- see box & exercise"
samples = jags(data, inits=myinits, parameters,
model.file =f, n.chains=2, n.iter=6000,
n.burnin=3000, n.thin=1, DIC=T)
samples = jags(data, inits=myinits, parameters,
model.file =f, n.chains=2, n.iter=6000,
n.burnin=3000, n.thin=1, DIC=T)
samples = jags(data, inits=myinits, parameters,
model.file =f, n.chains=2, n.iter=6000,
n.burnin=3000, n.thin=1, DIC=T)
samples = jags(data, inits=myinits, parameters,
model.file =f, n.chains=2, n.iter=6000,
n.burnin=3000, n.thin=1, DIC=T)
samples$summary
head(samples)
pc <- samples$BUGSoutput$sims.list$pc/p #to get proportion correct
mean(pc)
k
k[truth==0]
dfa<- data.frame(pc = samples$BUGSoutput$sims.list$pc/p,
bonafide = k[truth==0])
dfa<- data.frame(bonafide = k[truth==0],
cheat = k[truth=1])
head(dfa)
qplot(data=melt(dfa),x=value,geom='histogram',color=variable)+
theme_bw()
qplot(data=melt(dfa),x=value,geom='histogram',fill=variable, binwidth=1)+
theme_bw()
qplot(data=melt(dfa),x=value,geom='histogram',fill=variable, binwidth=1,
position='dodge')+
theme_bw()
dfa<- data.frame(bonafide = k[truth==0],
cheat = k[truth==1])
k[truth==0]
data.frame(k[truth==0],'bonafide')
dfa<- rbind(data.frame(k[truth==0],'bonafide'),
data.frame(k[truth==1],'cheat'))
dfa<- rbind(data.frame(k[truth==0],'bonafide'),
data.frame(k[truth==1],'cheat'))
data.frame(k[truth==1],'cheat')
head(data.frame(k[truth==1],'cheat'))
dfa<- rbind(data.frame(recalled=k[truth==0],group = 'bonafide'),
data.frame(recalled=k[truth==1],group = 'cheat'))
head(dfa)
qplot(data=dfa,x=value,geom='histogram',fill=variable, binwidth=1,
position='dodge')+
theme_bw()
qplot(data=dfa,x=recalled,geom='histogram',fill=group, binwidth=1,
position='dodge')+
theme_bw()
library(R2jags)
library(gridExtra)
library(reshape2)
setwd("/Users/mht/Documents/learning/tfbt/Lee&Wagenmakers/Code/ParameterEstimation/LatentMixtures")
cat('# Exam Scores
model{
# Each Person Belongs To One Of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(0.5)
}
# First Group Guesses
psi <- 0.5
# Second Group Has Some Unknown Greater Rate Of Success
phi ~ dbeta(1,1)I(0.5,1)
# Data Follow Binomial With Rate Given By Each Persons Group Assignment
for (i in 1:p){
theta[i] <- equals(z[i],0)*psi+equals(z[i],1)*phi
k[i] ~ dbin(theta[i],n)
}
}', file={f<-tempfile()})
k <- c(21,17,21,18,22,31,31,34,34,35,35,36,39,36,35)
p <- length(k) #number of people
n <- 40 # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <-  list(
list(phi = 0.75, z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("phi","z")
samples <- jags(data, inits=myinits, parameters,
model.file =f, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df<-data.frame(phi = samples$BUGSoutput$sims.list$phi,
z = samples$BUGSoutput$sims.list$z)
a<-qplot(data=melt(df$phi),x=value,geom='histogram',binwidth=0.008)+
theme_bw()+
xlab('phi')+
xlim(0,1)
b<-ggplot(melt(df[,2:length(df)]),aes(x=factor(value),fill=factor(value)))+
facet_wrap(~variable,scales='fixed')+
geom_histogram(binwidth=0.1)+
theme_bw()+
xlab('z (group membership)')
#quartz('6.1.1 success rate and group membership')
grid.arrange(a,b,nrow=1, main='6.1.1 success rate and group membership')
k <- c(21,17,21,18,22,31,31,34,34,35,35,36,39,36,35,20,20,20,20,20)
p <- length(k) #number of people
n <- 40 # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <-  list(
list(phi = 0.75, z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("phi","z")
samples <- jags(data, inits=myinits, parameters,
model.file =f, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df<-data.frame(phi = samples$BUGSoutput$sims.list$phi,
z = samples$BUGSoutput$sims.list$z)
a<-qplot(data=melt(df$phi),x=value,geom='histogram',binwidth=0.008)+
theme_bw()+
xlab('phi')+
xlim(0,1)
b<-ggplot(melt(df[,2:length(df)]),aes(x=factor(value),fill=factor(value)))+
facet_wrap(~variable,scales='fixed')+
geom_histogram(binwidth=0.1)+
theme_bw()+
xlab('z (group membership)')
#quartz('6.1.3b success rate and group+5 membership')
grid.arrange(a,b,nrow=1, main='6.1.3b success rate and group+5 membership')
head(Df)
head(df)
mean(df$phi)
library(R2jags)
library(gridExtra)
library(reshape2)
setwd("/Users/mht/Documents/learning/tfbt/Lee&Wagenmakers/Code/ParameterEstimation/LatentMixtures")
cat('# Exam Scores
model{
# Each Person Belongs To One Of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(0.5)
}
# First Group Guesses
psi <- 0.5
# Second Group Has Some Unknown Greater Rate Of Success
phi ~ dbeta(1,1)I(0.5,1)
# Data Follow Binomial With Rate Given By Each Persons Group Assignment
for (i in 1:p){
theta[i] <- equals(z[i],0)*psi+equals(z[i],1)*phi
k[i] ~ dbin(theta[i],n)
}
}', file={f<-tempfile()})
k <- c(21,17,21,18,22,31,31,34,34,35,35,36,39,36,35)
p <- length(k) #number of people
n <- 40 # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <-  list(
list(phi = 0.75, z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("phi","z")
samples <- jags(data, inits=myinits, parameters,
model.file =f, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df<-data.frame(phi = samples$BUGSoutput$sims.list$phi,
z = samples$BUGSoutput$sims.list$z)
a<-qplot(data=melt(df$phi),x=value,geom='histogram',binwidth=0.008)+
theme_bw()+
xlab('phi')+
xlim(0,1)
b<-ggplot(melt(df[,2:length(df)]),aes(x=factor(value),fill=factor(value)))+
facet_wrap(~variable,scales='fixed')+
geom_histogram(binwidth=0.1)+
theme_bw()+
xlab('z (group membership)')
#quartz('6.1.1 success rate and group membership')
grid.arrange(a,b,nrow=1, main='6.1.1 success rate and group membership')
mean(df$phi)
var(df$phi)
k <- c(21,17,21,18,22,31,31,34,34,35,35,36,39,36,35,20,20,20,20,20)
p <- length(k) #number of people
n <- 40 # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <-  list(
list(phi = 0.75, z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("phi","z")
samples <- jags(data, inits=myinits, parameters,
model.file =f, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df<-data.frame(phi = samples$BUGSoutput$sims.list$phi,
z = samples$BUGSoutput$sims.list$z)
a<-qplot(data=melt(df$phi),x=value,geom='histogram',binwidth=0.008)+
theme_bw()+
xlab('phi')+
xlim(0,1)
b<-ggplot(melt(df[,2:length(df)]),aes(x=factor(value),fill=factor(value)))+
facet_wrap(~variable,scales='fixed')+
geom_histogram(binwidth=0.1)+
theme_bw()+
xlab('z (group membership)')
#quartz('6.1.3b success rate and group+5 membership')
grid.arrange(a,b,nrow=1, main='6.1.3b success rate and group+5 membership')
var(df$phi)
k <- c(21,17,21,18,22,31,31,34,34,35,35,36,39,36,35,28,28,28,28,28)
p <- length(k) #number of people
n <- 40 # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <-  list(
list(phi = 0.75, z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("phi","z")
samples <- jags(data, inits=myinits, parameters,
model.file =f, n.chains=1, n.iter=1000,
n.burnin=1, n.thin=1, DIC=T)
df<-data.frame(phi = samples$BUGSoutput$sims.list$phi,
z = samples$BUGSoutput$sims.list$z)
a<-qplot(data=melt(df$phi),x=value,geom='histogram',binwidth=0.008)+
theme_bw()+
xlab('phi')+
xlim(0,1)
b<-ggplot(melt(df[,2:length(df)]),aes(x=factor(value),fill=factor(value)))+
facet_wrap(~variable,scales='fixed')+
geom_histogram(binwidth=0.1)+
theme_bw()+
xlab('z (group membership)')
#quartz('6.1.3b success rate and group+5 membership')
grid.arrange(a,b,nrow=1, main='6.1.3b success rate and group+5 membership')
cat('# Exam Scores With Individual Differences
model{
# Data Follow Binomial With Rate Given By Each Persons Group Assignment
for (i in 1:p){
theta[i] <- equals(z[i],0)*psi+equals(z[i],1)*phi[i]
k[i] ~ dbin(theta[i],n)
}
# Each Person Belongs To One Of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(0.5)
}
# The Second Group Allows Individual Differences
for (i in 1:p){
# Second Group Drawn From A Censored Gaussian Distribution
phi[i] ~ dnorm(mu,lambda)T(0,1)
}
# First Group Guesses
psi <- 0.5
# Second Group Mean, Precision (And Standard Deviation)
mu ~ dbeta(1,1)T(.5,1) # >0.5 Average Success Rate
lambda ~ dgamma(.001,.001)
sigma <- 1/sqrt(lambda)
# Posterior Predictive For Second Group
predphi ~ dnorm(mu,lambda)T(0,1)
}', file={f<-tempfile()})
k <- c(21,17,21,18,22,31,31,34,34,35,35,36,39,36,35,28,28,28,28,28)
p <- length(k) #number of people
n <- 40 # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <-  list(
list(mu = 0.75, lambda = 1, z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("predphi","theta","z","mu","sigma")
# The following command calls JAGS with specific options.
# For a detailed description see the R2jags documentation.
samples <- jags(data, inits=myinits, parameters,
model.file =f, n.chains=1, n.iter=2000,
n.burnin=1000, n.thin=1, DIC=T)
df<-data.frame(predphi = samples$BUGSoutput$sims.list$predphi,
theta = samples$BUGSoutput$sims.list$theta,
z = samples$BUGSoutput$sims.list$z,
mu = samples$BUGSoutput$sims.list$mu,
sigma = samples$BUGSoutput$sims.list$sigma)
a<-qplot(data=melt(df$mu),x=value,geom='histogram',binwidth=0.008)+
theme_bw()+
xlab('mu')+
xlim(0,1)
b<-ggplot(melt(df[,c('z.1','z.2','z.3','z.4','z.5',
'z.6','z.7','z.8','z.9','z.10',
'z.11','z.12','z.13','z.14','z.15')])
,aes(x=factor(value),fill=factor(value)))+
facet_wrap(~variable,scales='fixed')+
geom_histogram(binwidth=0.1)+
theme_bw()+
xlab('z (group membership)')
#quartz('6.2.1 success rate and group membership w/ individual differences')
grid.arrange(a,b,nrow=1, main='6.2.1 success rate and group membership w/ individual differences')
cat('# Exam Scores With Individual Differences
model{
# Data Follow Binomial With Rate Given By Each Persons Group Assignment
for (i in 1:p){
theta[i] <- equals(z[i],0)*psi+equals(z[i],1)*phi[i]
k[i] ~ dbin(theta[i],n)
}
# Each Person Belongs To One Of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(0.5)
}
# The Second Group Allows Individual Differences
for (i in 1:p){
# Second Group Drawn From A Censored Gaussian Distribution
phi[i] ~ dnorm(mu,lambda)T(0,1)
}
# First Group Guesses
psi <- 0.5
# Second Group Mean, Precision (And Standard Deviation)
mu ~ dbeta(1,1)T(.5,1) # >0.5 Average Success Rate
lambda ~ dgamma(.001,.001)
sigma <- 1/sqrt(lambda)
# Posterior Predictive For Second Group
predphi ~ dnorm(mu,lambda)T(0,1)
}', file={f<-tempfile()})
k <- c(21,17,21,18,22,31,31,34,34,35,35,36,39,36,35,28,28,28,28,28)
p <- length(k) #number of people
n <- 40 # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <-  list(
list(mu = 0.75, lambda = 1, z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("predphi","theta","z","mu","sigma")
# The following command calls JAGS with specific options.
# For a detailed description see the R2jags documentation.
samples <- jags(data, inits=myinits, parameters,
model.file =f, n.chains=1, n.iter=2000,
n.burnin=1000, n.thin=1, DIC=T)
df<-data.frame(predphi = samples$BUGSoutput$sims.list$predphi,
theta = samples$BUGSoutput$sims.list$theta,
z = samples$BUGSoutput$sims.list$z,
mu = samples$BUGSoutput$sims.list$mu,
sigma = samples$BUGSoutput$sims.list$sigma)
a<-qplot(data=melt(df$mu),x=value,geom='histogram',binwidth=0.008)+
theme_bw()+
xlab('mu')+
xlim(0,1)
b<-ggplot(melt(df[,c('z.1','z.2','z.3','z.4','z.5',
'z.6','z.7','z.8','z.9','z.10',
'z.11','z.12','z.13','z.14','z.15',
'z.16','z.17','z.18','z.19','z.20')])
,aes(x=factor(value),fill=factor(value)))+
facet_wrap(~variable,scales='fixed')+
geom_histogram(binwidth=0.1)+
theme_bw()+
xlab('z (group membership)')
#quartz('6.2.1 success rate and group membership w/ individual differences')
grid.arrange(a,b,nrow=1, main='6.2.1 success rate and group membership w/ individual differences')
quartz('6.2.2 posterior of predphi')
qplot(data=melt(df$predphi),x=value,geom='histogram',binwidth=0.008)+
theme_bw()+
xlab('posterior predictive phi')+
xlim(0,1)
