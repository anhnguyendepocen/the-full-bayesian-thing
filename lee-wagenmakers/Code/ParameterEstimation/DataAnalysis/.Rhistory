# Data Are Bernoulli By Rate
for (i in 1:nx){
for (j in 1:nz){
k[i,j] ~ dbern(theta[i,j,x1[i],z1[j]])
}
}
# Take care of NAs:
for (j in 5:8)
{
NA.LP1[j-4] <- k[19,j]
}
for (j in 2:8)
{
NA.LP2[j-1] <- k[20,j]
}
for (j in 1:8)
{
NA.LP3[j]   <- k[21,j]
}
}', file={f<-tempfile()})
k <- c(1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
0,1,1,0,0,1,0,0,
0,1,1,0,0,1,1,0,
1,0,0,1,1,0,0,1,
0,0,0,1,1,0,0,1,
0,1,0,0,0,1,1,0,
0,1,1,1,0,1,1,0,
1,0,0,1,NA,NA,NA,NA,
0,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA)
k <- matrix(k, nrow=21, byrow=T)
nx <- nrow(k)
nz <- ncol(k)
data <- list("nx","nz","k")
inits <-  list(
list(z = round(runif(nz)), x = round(runif(nx)), alpha=0.5, beta=0.5))
parameters <- c("z", "x", "alpha", "beta", "NA.LP1", "NA.LP2", "NA.LP3")
# The following command calls JAGS with specific options.
# For a detailed description the R2jags documentation.
samples <- jags(data, inits, parameters,
model.file =f, n.chains=1,
n.iter=2000, n.burnin=1000, n.thin=1, DIC=T)
df<-data.frame(alpha = samples$BUGSoutput$sims.list$alpha,
beta = samples$BUGSoutput$sims.list$beta,
x = samples$BUGSoutput$sims.list$x,
z = samples$BUGSoutput$sims.list$z,
na.lp1 = samples$BUGSoutput$sims.list$NA.LP1,
na.lp2 = samples$BUGSoutput$sims.list$NA.LP2,
na.lp3 = samples$BUGSoutput$sims.list$NA.LP3)
a<-qplot(data=melt(df[,substr(names(df),1,1)=='x']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('person country of origin')+
guides(fill=FALSE)
b<-qplot(data=melt(df[,substr(names(df),1,1)=='z']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('question country of origin')+
guides(fill=FALSE)
c<-qplot(data=melt(df$alpha),x=value,geom='histogram',binwidth=0.01)+
theme_bw()+
xlab('alpha')+
xlim(0,1)
d<-qplot(data=melt(df$beta),x=value,geom='histogram',binwidth=0.01)+
theme_bw()+
xlab('beta')+
xlim(0,1)
e<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp1']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 1')+
guides(fill=FALSE)
f<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp2']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 2')+
guides(fill=FALSE)
g<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp3']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 3')+
guides(fill=FALSE)
grid.arrange(a,b,c,d,e,f,g,nrow=4)
cat('# The Two Country Quiz
model{
# Probability of Answering Correctly
alpha ~ dunif(0,1)    # Match
beta ~ dunif(0,alpha) # Mismatch
# Group Membership For People and Questions
for (i in 1:nx){
x[i] ~ dbern(0.5)
x1[i] <- x[i]+1
}
for (j in 1:nz){
z[j] ~ dbern(0.5)
z1[j] <- z[j]+1
}
# Probability Correct For Each Person-Question Comination By Groups
for (i in 1:nx){
for (j in 1:nz){
theta[i,j,1,1] <- alpha
theta[i,j,1,2] <- beta
theta[i,j,2,1] <- beta
theta[i,j,2,2] <- alpha
}
}
# Data Are Bernoulli By Rate
for (i in 1:nx){
for (j in 1:nz){
k[i,j] ~ dbern(theta[i,j,x1[i],z1[j]])
}
}
# Take care of NAs:
for (j in 5:8)
{
NA.LP1[j-4] <- k[9,j]
}
for (j in 2:8)
{
NA.LP2[j-1] <- k[10,j]
}
for (j in 1:8)
{
NA.LP3[j]   <- k[11,j]
}
}', file={f<-tempfile()})
k <- c(1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
0,1,1,0,0,1,0,0,
0,1,1,0,0,1,1,0,
1,0,0,1,1,0,0,1,
0,0,0,1,1,0,0,1,
0,1,0,0,0,1,1,0,
0,1,1,1,0,1,1,0,
1,0,0,1,NA,NA,NA,NA,
0,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA)
k <- matrix(k, nrow=11, byrow=T)
nx <- nrow(k)
nz <- ncol(k)
data <- list("nx","nz","k")
inits <-  list(
list(z = round(runif(nz)), x = round(runif(nx)), alpha=0.5, beta=0.5))
parameters <- c("z", "x", "alpha", "beta", "NA.LP1", "NA.LP2", "NA.LP3")
# The following command calls JAGS with specific options.
# For a detailed description the R2jags documentation.
samples <- jags(data, inits, parameters,
model.file =f, n.chains=1,
n.iter=2000, n.burnin=1000, n.thin=1, DIC=T)
df<-data.frame(alpha = samples$BUGSoutput$sims.list$alpha,
beta = samples$BUGSoutput$sims.list$beta,
x = samples$BUGSoutput$sims.list$x,
z = samples$BUGSoutput$sims.list$z,
na.lp1 = samples$BUGSoutput$sims.list$NA.LP1,
na.lp2 = samples$BUGSoutput$sims.list$NA.LP2,
na.lp3 = samples$BUGSoutput$sims.list$NA.LP3)
a<-qplot(data=melt(df[,substr(names(df),1,1)=='x']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('person country of origin')+
guides(fill=FALSE)
b<-qplot(data=melt(df[,substr(names(df),1,1)=='z']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('question country of origin')+
guides(fill=FALSE)
c<-qplot(data=melt(df$alpha),x=value,geom='histogram',binwidth=0.01)+
theme_bw()+
xlab('alpha')+
xlim(0,1)
d<-qplot(data=melt(df$beta),x=value,geom='histogram',binwidth=0.01)+
theme_bw()+
xlab('beta')+
xlim(0,1)
e<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp1']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 1')+
guides(fill=FALSE)
f<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp2']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 2')+
guides(fill=FALSE)
g<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp3']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 3')+
guides(fill=FALSE)
quartz('6.4.3')
grid.arrange(a,b,c,d,e,f,g,nrow=4)
cat('# The Two Country Quiz
model{
# Probability of Answering Correctly
alpha ~ dunif(0,1)     # Match
beta ~ dunif(0,alpha) # Mismatch
# Group Membership For People and Questions
for (i in 1:nx){
x[i] ~ dbern(0.5)
x1[i] <- x[i]+1
}
for (j in 1:nz){
z[j] ~ dbern(0.5)
z1[j] <- z[j]+1
}
# Probability Correct For Each Person-Question Comination By Groups
for (i in 1:nx){
for (j in 1:nz){
theta[i,j,1,1] <- alpha
theta[i,j,1,2] <- beta
theta[i,j,2,1] <- beta
theta[i,j,2,2] <- alpha
}
}
# Data Are Bernoulli By Rate
for (i in 1:nx){
for (j in 1:nz){
k[i,j] ~ dbern(theta[i,j,x1[i],z1[j]])
}
}
# Take care of NAs:
for (j in 5:8)
{
NA.LP1[j-4] <- k[19,j]
}
for (j in 2:8)
{
NA.LP2[j-1] <- k[20,j]
}
for (j in 1:8)
{
NA.LP3[j]   <- k[21,j]
}
}', file={f<-tempfile()})
k <- c(1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
1,0,0,1,1,0,0,1,
0,1,1,0,0,1,0,0,
0,1,1,0,0,1,1,0,
1,0,0,1,1,0,0,1,
0,0,0,1,1,0,0,1,
0,1,0,0,0,1,1,0,
0,1,1,1,0,1,1,0,
1,0,0,1,NA,NA,NA,NA,
0,NA,NA,NA,NA,NA,NA,NA,
NA,NA,NA,NA,NA,NA,NA,NA)
k <- matrix(k, nrow=21, byrow=T)
nx <- nrow(k)
nz <- ncol(k)
data <- list("nx","nz","k")
inits <-  list(
list(z = round(runif(nz)), x = round(runif(nx)), alpha=0.5, beta=0.5))
parameters <- c("z", "x", "alpha", "beta", "NA.LP1", "NA.LP2", "NA.LP3")
# The following command calls JAGS with specific options.
# For a detailed description the R2jags documentation.
samples <- jags(data, inits, parameters,
model.file =f, n.chains=1,
n.iter=2000, n.burnin=1000, n.thin=1, DIC=T)
df<-data.frame(alpha = samples$BUGSoutput$sims.list$alpha,
beta = samples$BUGSoutput$sims.list$beta,
x = samples$BUGSoutput$sims.list$x,
z = samples$BUGSoutput$sims.list$z,
na.lp1 = samples$BUGSoutput$sims.list$NA.LP1,
na.lp2 = samples$BUGSoutput$sims.list$NA.LP2,
na.lp3 = samples$BUGSoutput$sims.list$NA.LP3)
a<-qplot(data=melt(df[,substr(names(df),1,1)=='x']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('person country of origin')+
guides(fill=FALSE)
b<-qplot(data=melt(df[,substr(names(df),1,1)=='z']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('question country of origin')+
guides(fill=FALSE)
c<-qplot(data=melt(df$alpha),x=value,geom='histogram',binwidth=0.01)+
theme_bw()+
xlab('alpha')+
xlim(0,1)
d<-qplot(data=melt(df$beta),x=value,geom='histogram',binwidth=0.01)+
theme_bw()+
xlab('beta')+
xlim(0,1)
e<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp1']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 1')+
guides(fill=FALSE)
f<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp2']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 2')+
guides(fill=FALSE)
g<- qplot(data=melt(df[,substr(names(df),1,6)=='na.lp3']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed',nrow=1)+
xlab('NA LP 3')+
guides(fill=FALSE)
quartz('6.4.4')
grid.arrange(a,b,c,d,e,f,g,nrow=4)
quartz('6.4.4')
grid.arrange(a,b,c,d,e,f,g,nrow=4)
cat('# Malingering
model{
# Each Person Belongs to One of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(0.5)
z1[i] <- z[i]+1
}
# Bona Fide Group has Unknown Success Rate Above Chance
psi[1] ~ dunif(0.5,1)
# Malingering Group has Unknown Success Rate Below Bona Fide
psi[2] ~ dunif(0,psi[1])
# Data are Binomial with Group Rate for Each Person
for (i in 1:p){
theta[i] <- psi[z1[i]]
k[i] ~ dbin(theta[i],n)
}
}
',file={f<-tempfile()})
k <- c(45,45,44,45,44,45,45,45,45,45,30,20,6,44,44,27,25,17,14,27,35,30)
p <- length(k) # number of people
n <- 45        # number of questions
data    <- list("p", "k", "n") # to be passed on to JAGS
myinits <- list(
list(psi = c(0.7,0.5), z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("psi","z")
# The following command calls JAGS with specific options.
# For a detailed description see the R2jags documentation.
samples <- jags(data, inits=myinits, parameters,
model.file=f, n.chains=1, n.iter=2000,
n.burnin=1000, n.thin=1, DIC=T)
cat('# Malingering
model{
# Each Person Belongs to One of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(0.5)
z1[i] <- z[i]+1
}
# Bona Fide Group has Unknown Success Rate Above Chance
psi[1] ~ dunif(0.5,1)
# Malingering Group has Unknown Success Rate Below Bona Fide
psi[2] ~ dunif(0,psi[1])
# Data are Binomial with Group Rate for Each Person
for (i in 1:p){
theta[i] <- psi[z1[i]]
k[i] ~ dbin(theta[i],n)
}
}
',file={f<-tempfile()})
k <- c(45,45,44,45,44,45,45,45,45,45,30,20,6,44,44,27,25,17,14,27,35,30)
p <- length(k) # number of people
n <- 45        # number of questions
data    <- list("p", "k", "n") # to be passed on to JAGS
myinits <- list(
list(psi = c(0.7,0.5), z = round(runif(p)))) # Initial group assignment
# parameters to be monitored:
parameters <- c("psi","z")
# The following command calls JAGS with specific options.
# For a detailed description see the R2jags documentation.
samples <- jags(data, inits=myinits, parameters,
model.file=f, n.chains=1, n.iter=2000,
n.burnin=1000, n.thin=1, DIC=T)
df<-data.frame(psi = samples$BUGSoutput$sims.list$psi,
z = samples$BUGSoutput$sims.list$z)
head(df)
qplot(data=melt(df[,substr(names(df),1,1)=='z']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('person country of origin')+
guides(fill=FALSE)
melt(df[,substr(names(df),1,1)=='p']
melt(df[,substr(names(df),1,1)=='p'])
head(melt(df[,substr(names(df),1,1)=='p'])
)
qplot(data=melt(df[,substr(names(df),1,1)=='p']),
x=value,fill=variable,geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
guides(fill=FALSE)
xlim(0,1)
qplot(data=melt(df[,substr(names(df),1,1)=='p']),
x=value,fill=variable,geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
guides(fill=FALSE)+
xlim(0,1)
qplot(data=melt(df[,substr(names(df),1,1)=='z']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('bona fide or malingerer')+
guides(fill=FALSE)
a<-qplot(data=melt(df[,substr(names(df),1,1)=='z']),
x=factor(value),fill=factor(value),geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
xlab('bona fide or malingerer')+
guides(fill=FALSE)
b<-qplot(data=melt(df[,substr(names(df),1,1)=='p']),
x=value,fill=variable,geom='histogram',binwidth=0.02)+
theme_bw()+
facet_wrap(~variable,scales='fixed')+
guides(fill=FALSE)+
xlim(0,1)
grid.arrange(a,b)
cat('# Malingering, with Individual Differences
model{
# Each Person Belongs to One of Two Latent Groups
for (i in 1:p){
z[i] ~ dbern(phi) # phi is the Base Rate
z1[i] <- z[i]+1
}
# Relatively Uninformative Prior on Base Rate
phi ~ dbeta(5,5)
# Data are Binomial with Rate Given by
# Each Personís Group Assignment
for (i in 1:p){
k[i] ~ dbin(theta[i,z1[i]],n)
theta[i,1] ~ dbeta(alpha[1],beta[1])
theta[i,2] ~ dbeta(alpha[2],beta[2])
}
# Transformation to Group Mean and Precision
alpha[1] <- mubon * lambdabon
beta[1] <- lambdabon * (1-mubon)
# Additivity on Logit Scale
logit(mumal) <- logit(mubon) - mudiff
alpha[2] <- mumal * lambdamal
beta[2]  <- lambdamal * (1-mumal)
# Priors
mubon ~ dbeta(1,1)
mudiff ~ dnorm(0,0.5)T(0,) # Constrained to be Positive
lambdabon ~ dunif(40,800)
lambdamal ~ dunif(4,100)
}
',file={f<-tempfile()})
k <- c(45,45,44,45,44,45,45,45,45,45,30,20,6,44,44,27,25,17,14,27,35,30)
p <- length(k) # number of people
n <- 45        # number of questions
data <- list("p", "k", "n") # to be passed on to JAGS
myinits <- list(
list(z = round(runif(p)), mudiff=0.2),
list(z = round(runif(p)), mudiff=0.3),
list(z = round(runif(p)), mudiff=0.4))
# parameters to be monitored:
parameters <- c("theta","z","mubon","lambdabon",
"mumal","lambdamal","mudiff","phi")
# The following command calls JAGS with specific options.
# For a detailed description see the R2jags documentation.
samples <- jags(data, inits=myinits, parameters,
model.file = f, n.chains=3, n.iter=10000,
n.burnin=1000, n.thin=1, DIC=T)
df<-data.frame(theta = samples$BUGSoutput$sims.list$theta,
z = samples$BUGSoutput$sims.list$z,
mubon = samples$BUGSoutput$sims.list$mubon,
lambdabon = samples$BUGSoutput$sims.list$lambdabon,
mumal = samples$BUGSoutput$sims.list$mumal,
lambdamal = samples$BUGSoutput$sims.list$lambdamal,
mudiff = samples$BUGSoutput$sims.list$mudiff,
phi = samples$BUGSoutput$sims.list$phi)
head(df)
a<-qplot(data=melt(df$mumal)),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
guides(fill=FALSE)+
xlim(0,1)
qplot(data=melt(df$mumal)),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)
a<-qplot(data=melt(df$mumal),
x=value,geom='histogram',binwidth=0.02)+
theme_bw()+
xlim(0,1)
a
